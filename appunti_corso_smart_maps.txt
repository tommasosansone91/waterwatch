
# install postgres db

# devi essere fuori dal virtual environment

sudo apt update

sudo apt install postgresql postgresql-contrib

# activate

sudo systemctl start postgresql.service


# configurazioni per il corso

sudo apt install postgis postgresql-14-postgis-3

tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet$ sudo -i -u postgres
postgres@tommaso-VirtualBox02:~$ createdb cptwater
postgres@tommaso-VirtualBox02:~$ createuser -s waterwatch -P
Enter password for new role:  waterwatch
Enter it again: 
postgres@tommaso-VirtualBox02:~$ psql cptwater
psql (14.5 (Ubuntu 14.5-0ubuntu0.22.04.1))
Type "help" for help.

cptwater=# grant all privileges on database cptwater to waterwatch;
GRANT
cptwater=# CREATE EXTENSION postgis;
CREATE EXTENSION
cptwater=# CREATE EXTENSION postgis_topology;
CREATE EXTENSION


cptwater=# SELECT PostGIS_Version();
            postgis_version            
---------------------------------------
 3.2 USE_GEOS=1 USE_PROJ=1 USE_STATS=1
(1 row)

# attiva il venv

source venv_smart_maps/bin/activate

# nel virtualenv c'è già pip
# per vedere i package installati nel venv correntemente attivo
pip list

pip install django==4.0


(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet$ django-admin startproject waterwatch
(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet$ ll
total 40
drwxrwxr-x 5 tommaso tommaso 4096 nov 28 02:08 ./
drwxrwxr-x 8 tommaso tommaso 4096 nov 28 00:25 ../
-rw-rw-r-- 1 tommaso tommaso 1386 nov 11 01:37 aggiungere_nuova_chiave_SSH.txt
-rw-rw-r-- 1 tommaso tommaso    0 nov 28 02:02 appunti_corso_smart_maps.txt
-rw-rw-r-- 1 tommaso tommaso  298 nov 11 01:35 automate_git_push_with_token.txt
-rw-rw-r-- 1 tommaso tommaso  388 nov 28 00:52 cheats_sheets_for_linux.txt
-rw-rw-r-- 1 tommaso tommaso 2756 nov 28 02:01 configurare_postgresql.txt
drwxrwxr-x 3 tommaso tommaso 4096 nov 28 00:50 .idea/
-rw-rw-r-- 1 tommaso tommaso   43 nov 28 02:06 requirements.txt
drwxrwxr-x 4 tommaso tommaso 4096 nov 28 00:52 venv_smart_maps/
drwxrwxr-x 3 tommaso tommaso 4096 nov 28 02:08 waterwatch/


(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet$ cd waterwatch/
(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet/waterwatch$ python manage.py startapp waterwatchapp


percorso interprete pycharm
/home/tommaso/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet/venv_smart_maps/lib/python

quello di isstema è usr/bin/python3
ho ricopiato il path bin/python3

git
-------

git remote add origin git@github.com:tommasosansone91/django-map-waterwatch.git
git push -u origin master

per qualche motivo avevo gia configuratoil tocken su questa macchina e non me lo chiede quando facico òa git psuh

pip install django-leaflet

pip install geojson

modifico i settings DATABASE in questo modo

    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'cptwater',
        'USER': 'waterwatch',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
    }

e commento il default

alle INSTALLED_APPS  aggiuno

    'django.contrib.gis',  # gis app
    'waterwatchapp'  # my app

python manage.py migrate

(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet/waterwatch$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK


creo un superuser

venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet/waterwatch$ python manage.py createsuperuser
Username (leave blank to use 'tommaso'): waterwatch
Email address:
Password: waterwatch
Password (again):
The password is too similar to the username.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

definisco il modello, nel models.py della app

from django.contrib.gis.db import models

waterConsumption

makemigrations

(venv_smart_maps) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/create-smart-maps-in-python-and-leaflet/waterwatch$ python manage.py makemigrations
Migrations for 'waterwatchapp':
  waterwatchapp/migrations/0001_initial.py
    - Create model WaterConsumption

poi migrate


dice che migrate appplica le makemigrations

 pip install xlrd
 pip install pandas

 poi scarico un excel dal suto web


 aggiungo la leaflett app to settings

 installd apps-> 'leaflet',

 ora modifico admin.py della app

 registro il modello in admin e faccio si che quando viene letto

class WaterConsumptionAdmin(LeafletGeoAdmin):
    pass

admin.site.register(WaterConsumption, WaterConsumptionAdmin)

df_excelReader = pd.read_excel(BASE_DIR / 'waterwatch_clean2.xlsx')

for index, row in df_excelReader.iterrows():
    Id = index
    Suburb = row['Suburb']
    NoOfSingleResProp = row['Number of single-residential properties_number']
    AvgMonthlyKL = row['Oct 2017\nkl/month']
    AvgMonthlyKLPredicted = 0
    PredictionAccuracy = 0
    Month = row ['Month']
    Year = row['Year']
    DateTime = datetime.now()
    Longitude = row['Longitude']
    Latitude = row['Latitude']

    WaterConsumption(Id=Id,
                     Suburb=Suburb,
                     NoOfSingleResProp=NoOfSingleResProp,
                     AvgMonthlyKL=AvgMonthlyKL,
                     AvgMonthlyKLPredicted=AvgMonthlyKLPredicted,
                     PredictionAccuracy=PredictionAccuracy,
                     Month=Month,
                     Year=Year,
                     DateTime=DateTime,
                     geom=Point(Longitude, Latitude)
                     ).save()

